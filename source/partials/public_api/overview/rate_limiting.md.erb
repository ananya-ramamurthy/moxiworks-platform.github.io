### Rate Limiting
To ensure that system resources are not overloaded and response quality degrated, Moxi Works allows only a limited number of requests every minute.


<blockquote><div class='highlight json' style="display: block">
<span class='data-example-label'>Over-limit Error Response Example</span>
</div></blockquote>

```json
{
  "status": "fail",
  "errorCode": 4000,
  "message": "'Too many requests. Please try again later."
}
```

**Handling "Rate Limit Exceeded" error**
In order to prevent abuse and undue stress on the Moxi Works servers, the API has a rate limiting feature that restricts users to **300** requests per minute per Access Token.

If and when the limit is enforced, any requests that exceed this limit will be rejected with an **429** HTTP status code, along with the JSON response body shown to the right


It is recommended that you design your integration to gracefully handle this rate limit error.
One way to accomplish this would be to have your integration *sleep* for 60 seconds when this error is returned from the API, then retry the request.
Alternatively, you might choose to use [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff) (an error handling strategy whereby you periodically retry a failed request with progressively longer wait times between retries, until either the request succeeds or a specified number of retry attempts is reached).

The Moxi Works Platform includes rate limiting information in the response headers. The following headers are included in every response:

Response Header | Type | Description |
-----|-----|-----|-----|
| x-ratelimit-limit | Integer | Number of request available in each period |
| x-ratelimit-remaining | Integer | Requests remaining in current period |
| x-ratelimit-period | Integer | Rate limit period length (in seconds) |
| x-ratelimit-reset | Unix Timestamp | Timestamp at which the next period begins |


<aside class='warning'>To ensure that your logic handles MoxiWorks API response headers correctly, please use case insensitive comparisons when parsing the response header keys as they are not guaranteed to match any specific uppercase or lowercase combination.  </aside>
