#### <span class='entity-name'>Group</span> <span class='action-name'>Index</span>

<div class='highlight ruby'><blockquote><span class='data-example-label'><a href='http://moxiworks-platform.github.io/moxiworks-ruby/MoxiworksPlatform/Group.html#search-class_method'>Ruby Search Docs</a></span></blockquote></div>

<div class='highlight php'><blockquote><span class='data-example-label'><a href='http://moxiworks-platform.github.io/moxiworks-php/classes/MoxiworksPlatform.Group.html#method_search'>PHP Search Docs</a></span></blockquote></div>

<div class='highlight csharp'><blockquote><span class='data-example-label'><a href='https://moxiworks-platform.github.io/moxiworks-dotnet/class_moxi_works_1_1_platform_1_1_group_service.html#a473bdf89346a3dd34b82e91460e7b09d'>.Net <span class='action-name'>GroupService.GetGroupsAsync</span> Docs</a></span></blockquote></div>

> <span class="data-example-label"><span class='entity-name'>Group</span> <span class='action-name'>Index</span> (using <span class='attribute-name'>agent_uuid</span>) Example</span>

```json
{
  "agent_uuid":"12345678-1234-1234-1234-1234567890ab",
  "name":"foo",
  "updated_since":"1518049148"
}
```

```http
GET /api/groups?agent_uuid=12345678-1234-1234-1234-1234567890ab&name=foo HTTP/1.1
Host: api.moxiworks.com
Accept: application/vnd.moxi-platform+json;version=1
Authorization: Basic XNNeXAAAUZaQlF0dA==
Content-Type: application/x-www-form-urlencoded

```

```csharp

/* set up prerequisites once */
ConfigurationManager.AppSettings["Secret"] = "secret";
ConfigurationManager.AppSettings["Identifier"] = "abc123";

var agentUuid = "12345678-1234-1234-1234-1234567890ab";
var groupName = "group abc123";

var service = new GroupsService(new MoxiWorksClient());
var results = service.GetGroupsAsync(agentUuid, AgentIdType.AgentUuid, groupName).Result;

```



```ruby
##### set up prerequisites once
require 'moxiworks_platform'

platform_identifier = 'abc123'

platform_secret = 'secret'

MoxiworksPlatform::Credentials.new(platform_identifier, platform_secret)
##### end prerequisites

moxi_works_groups = MoxiworksPlatform::Group.search(
        agent_uuid: "12345678-1234-1234-1234-1234567890ab",
        name: "foo")

# or for a list of all available groups:
moxi_works_groups = MoxiworksPlatform::Group.search(
        agent_uuid: "12345678-1234-1234-1234-1234567890ab")

```

```php
<?php
$platform_identifier = 'abc123'; // platorm_identifier provided by Moxi Works Platform Rep
$platform_secret = 'secret'; //platform_secret provided by Moxi Works Platform Rep

$credentials = new MoxiworksPlatform\Credentials($platform_identifier, $platform_secret);

$moxi_works_groups = MoxiworksPlatform\Group::search([
        'agent_uuid' => '12345678-1234-1234-1234-1234567890ab',
        'name' => 'foo']);

# or for a list of all available groups
$moxi_works_groups = MoxiworksPlatform\Group::search([
        $agent_uuid => "12345678-1234-1234-1234-1234567890ab"]);

?>
```


> <span class="data-example-label"><span class='entity-name'>Group</span> <span class='action-name'>Index</span> (using <span class='attribute-name'>moxi_works_agent_id</span>) Example</span>

```json
{
  "moxi_works_agent_id":"abc123",
  "name":"foo"
}
```

```http
GET /api/groups?moxi_works_agent_id=abc123&name=foo HTTP/1.1
Host: api.moxiworks.com
Accept: application/vnd.moxi-platform+json;version=1
Authorization: Basic XNNeXAAAUZaQlF0dA==
Content-Type: application/x-www-form-urlencoded

```

```csharp

/* set up prerequisites once */
ConfigurationManager.AppSettings["Secret"] = "secret";
ConfigurationManager.AppSettings["Identifier"] = "abc123";

var moxiWorksAgentID = "1234bcd;
var groupName = "group abc123";

var service = new GroupsService(new MoxiWorksClient());
var results = service.GetGroupsAsync(moxiWorksAgentID, AgentIdType.MoxiWorksAgentId, groupName).Result;


```



```ruby
##### set up prerequisites once
require 'moxiworks_platform'

platform_identifier = 'abc123'

platform_secret = 'secret'

MoxiworksPlatform::Credentials.new(platform_identifier, platform_secret)
##### end prerequisitesa

moxi_works_groups = MoxiworksPlatform::Group.search(
        moxi_works_agent_id: "1234abcd",
        name: "foo")

# or for a list of all available groups:
moxi_works_groups = MoxiworksPlatform::Group.search(
        moxi_works_agent_id: "1234abcd")

```

```php
<?php
$platform_identifier = 'abc123'; // platorm_identifier provided by Moxi Works Platform Rep
$platform_secret = 'secret'; //platform_secret provided by Moxi Works Platform Rep

$credentials = new MoxiworksPlatform\Credentials($platform_identifier, $platform_secret);

$moxi_works_groups = MoxiworksPlatform\Group::search([
        'moxi_works_agent_id' => '1234abcd',
        'name' => 'foo']);

# or for a list of all available groups
$moxi_works_groups = MoxiworksPlatform\Group::search([
        $moxi_works_agent_id => "1234abcd"]);

?>
```


<aside class="note">Send a <b>GET</b> request to https://api.moxiworks.com/api/groups</aside>


When searching for <span class='entity-name'>Group</span> objects using the Moxi Works platform API, format your data using the following parameters.

##### <span class='entity-name'>Group</span> <span class='action-name'>Index</span> Request Attributes


Attribute | Type | Length Limit |
-----|-----|-----|-----|
|<span class="multi-option-required-data">agent_uuid*</span>|<span class="multi-option-required-data"><span class="data-type">String</span></span>| <span class="multi-option-required-data">255</span>
|<span class="multi-option-required-data">moxi_works_agent_id*</span>|<span class="multi-option-required-data"><span class="data-type">String</span></span>| <span class="multi-option-required-data">255</span>
|<span class="optional-data">name</span>|<span class="data-type">String</span>| 255 |
|<span class="optional-data">updated_since</span>|<span class="data-type">Integer</span>| 255 |


<span class="multi-option-required-data">* **Either <span class='attribute-name'>moxi_works_agent_id</span> or <span class='attribute-name'>agent_uuid</span> must be supplied. For guidance on which Agent identifier better fits your use-case, see [Agent Identifiers](#agent-identifiers)**</span>


<span class="required-data">**Required Parameters Are In Red**</span>


<span class="request-data-head">agent_uuid</span>
<span class="request-data-remarks">This is the Moxi Works Platform ID of the <span class='entity-name'>Agent</span> which an  <span class='entity-name'>group</span> entry is associated with. This will be an [RFC 4122](https://tools.ietf.org/html/rfc4122) compliant UUID. <span class='attribute-name'>agent_uuid</span> or <span class='attribute-name'>moxi_works_agent_id</span> is required and must reference a valid Moxi Works Agent ID for your <span class='entity-name'>Group</span> <span class='action-name'>Index</span> request to be accepted.</span>


<span class="request-data-head">moxi_works_agent_id</span>
<span class="request-data-remarks">This is the Moxi Works Platform ID of the <span class='entity-name'>Agent</span> which you are searching for associated <span class='entity-name'>Group</span> objects. This will be a string that may take the form of an email address, or a unique identification string. This data is required and must reference a valid Moxi Works Agent ID for your <span class='entity-name'>Group</span> <span class='action-name'>Index</span>  request to be accepted.</span>

<aside class="note">A company's internal agent id may be used to construct the agent's unique identification string. To do so, the value passed via the moxi_works_agent_id should be a single concatenated string, of the form:</br>[moxi_works_company_id]:[internal_agent_id]</br>Use <a href='#company'>Company Endpoint</a> to determine which moxi_works_company_id to use.</aside>

<span class="request-data-head">name</span>
<span class="request-data-remarks">This is the name of a <span class='entity-name'>Group</span> to be searched for.</span>

<aside class="note">If no <span class='attribute-name'>name</span> parameter is included, all defined <span class='entity-name'>Group</span> objects for the <span class='entity-name'>Agent</span> will be returned in the response.</aside>

<span class="request-data-head">updated_since</span>
<span class="request-data-remarks">When a Unix timestamp is passed in this parameter, only <span class='entity-name'>Group</span> objects that contain contacts that have been updated since this Unix timestamp will be returned. This update references contacts, not any changes with the group itself.</span>

<aside class="note">The <span class='attribute-name'>updated_since</span> parameter references changes in associated contacts contained in the <span class='entity-name'>Group</span>. Once you have ascertained which groups need to be checked, you can use the <span class='entity-name'>Group</span> <span class='action-name'>Show</span> request to check for contact updates. </aside>



##### <span class='entity-name'>Group</span> <span class='action-name'>Index</span> Response Payload

The following attributes make up the payload of the <span class='entity-name'>Group</span> response for a <span class='action-name'>Index</span> request.



<blockquote><div class='highlight json' style="display: block">
<span class='data-example-label'><span class='entity-name'>Group</span> <span class='action-name'>Index</span> Response Payload Example
</span></div></blockquote>

```json

[
 {
"moxi_works_group_name": "Christmas Cards",
"moxi_works_group_id": "Christmas Cards",
"transient": true
},
 {
"moxi_works_group_name": "foo",
"moxi_works_group_id": "foo",
"transient": true
},
 {
"moxi_works_group_name": "Friends",
"moxi_works_group_id": "Friends",
"transient": true
},
]
```

<blockquote><div class='highlight json' style="display: block">
  <span class='data-example-label'><span class='entity-name'>Group</span> <span class='action-name'>Index</span> Failure Response
</div> See <a href='#error-handling'>Error Handling</a> for details about individual error codes.</blockquote>

```json
{
  "status":"fail",
  "errorCode": xxx,
  "messages": ["messages"]
}

```

###### <span class='action-name'>Group</span> Response Attributes

The <span class='entity-name'>Group</span> <span class='action-name'>Index</span> response is made up of an array of <span class='entity-name'>Group</span> objects.  Each  <span class='entity-name'>Group</span> object contains the following attributes.

Attribute | Type |
-----|-----|-----|-----|
|<span class="response-data">moxi_works_group_name</span>|<span class="response-data"><span class="data-type">String</span></span>|
|<span class="response-data">moxi_works_group_id</span>|<span class="response-data"><span class="data-type">String</span></span>|
|<span class="response-data">transient</span>|<span class="response-data"><span class="data-type">Boolean</span></span>|


<span class="response-data-head">moxi_works_group_name</span>
<span class="response-data-remarks">This is a human readable string meaningful to the agent about what kind of <span class='entity-name'>Contact</span> objects are in this <span class='entity-name'>Group</span>.</span>

<span class="response-data-head">moxi_works_group_id</span>
<span class="response-data-remarks">This is the unique identifier for this <span class='entity-name'>Group</span>.</span>


<span class="response-data-head">transient</span>
<span class="response-data-remarks">Whether the group ID exists beyond name change.</span>

<aside class="warning">Some providers (namely versions of Exchange) provide no permanent unique identifier for groups. <span class='entity-name'>Group</span> IDs for these providers are inherently transient. Moxi Works has no way to guarantee that any <span class='entity-name'>Group</span> marked <span class='attribute-name'>transient</span> will persist since the name can be changed outside of The Moxi Works platform and Exchange provides no persistent IDs for their Group entities.</aside>
